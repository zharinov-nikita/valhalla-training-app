import {
  SettingOutlined,
  UserOutlined,
  ZoomOutOutlined,
} from '@ant-design/icons'
import { FC } from 'react'
import { Navigate, Route, Routes } from 'react-router-dom'
import Button from '../components/Button/Button'
import Header from '../components/Header/Header'
import Navigation from '../components/Navigation/Navigation'
import { useAppSelector } from '../hooks/store/useAppSelector'
import '../styles/index.scss'

const App: FC = () => {
  const { theme, positon } = useAppSelector((state) => state.app)
  const { isAuth } = useAppSelector((state) => state.user)

  return (
    <div className="app" data-theme={theme} data-positon={positon}>
      <div className="container">
        <div className="wrapper">
          <Header />
          <Navigation
            props={{
              list: [
                {
                  id: 1,
                  to: '/user',
                  title: 'Профиль',
                  description: 'Страница, на которой находиться ваш профиль',
                  icon: <ZoomOutOutlined />,
                },
                {
                  id: 2,
                  to: '/plan',
                  title: 'Аккаунт',
                  description: 'Страница, на которой находиться ваш профиль',
                  icon: <UserOutlined />,
                },
                {
                  id: 3,
                  to: '/cycle',
                  title: 'Моя неделя',
                  description: 'Страница, на которой находиться ваш профиль',
                  icon: <SettingOutlined />,
                },
              ],
            }}
          />
          Давно выяснено, что при оценке дизайна и композиции читаемый текст
          мешает сосредоточиться. Lorem Ipsum используют потому, что тот
          обеспечивает более или менее стандартное заполнение шаблона, а также
          реальное распределение букв и пробелов в абзацах, которое не
          получается при простой дубликации "Здесь ваш текст.. Здесь ваш текст..
          Здесь ваш текст.." Многие программы электронной вёрстки и редакторы
          HTML используют Lorem Ipsum в качестве текста по умолчанию, так что
          поиск по ключевым словам "lorem ipsum" сразу показывает, как много
          веб-страниц всё ещё дожидаются своего настоящего рождения. За
          прошедшие годы текст Lorem Ipsum получил много версий. Некоторые
          версии появились по ошибке, некоторые - намеренно (например,
          юмористические варианты). Давно выяснено, что при оценке дизайна и
          композиции читаемый текст мешает сосредоточиться. Lorem Ipsum
          используют потому, что тот обеспечивает более или менее стандартное
          заполнение шаблона, а также реальное распределение букв и пробелов в
          абзацах, которое не получается при простой дубликации "Здесь ваш
          текст.. Здесь ваш текст.. Здесь ваш текст.." Многие программы
          электронной вёрстки и редакторы HTML используют Lorem Ipsum в качестве
          текста по умолчанию, так что поиск по ключевым словам "lorem ipsum"
          сразу показывает, как много веб-страниц всё ещё дожидаются своего
          настоящего рождения. За прошедшие годы текст Lorem Ipsum получил много
          версий. Некоторые версии появились по ошибке, некоторые - намеренно
          (например, юмористические варианты). Давно выяснено, что при оценке
          дизайна и композиции читаемый текст мешает сосредоточиться. Lorem
          Ipsum используют потому, что тот обеспечивает более или менее
          стандартное заполнение шаблона, а также реальное распределение букв и
          пробелов в абзацах, которое не получается при простой дубликации
          "Здесь ваш текст.. Здесь ваш текст.. Здесь ваш текст.." Многие
          программы электронной вёрстки и редакторы HTML используют Lorem Ipsum
          в качестве текста по умолчанию, так что поиск по ключевым словам
          "lorem ipsum" сразу показывает, как много веб-страниц всё ещё
          дожидаются своего настоящего рождения. За прошедшие годы текст Lorem
          Ipsum получил много версий. Некоторые версии появились по ошибке,
          некоторые - намеренно (например, юмористические варианты).
          {isAuth ? (
            <Routes>
              <Route path="/user" element={'user'} />
              <Route path="*" element={'404'} />
            </Routes>
          ) : (
            <Routes>
              <Route path="/auth" element={'auth'} />
              <Route path="*" element={<Navigate to={'/auth'} replace />} />
            </Routes>
          )}
        </div>
      </div>
    </div>
  )
}

export default App
